{"ast":null,"code":"import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  var clientHeight = dimensions.clientHeight,\n    scrollTop = dimensions.scrollTop,\n    offsetHeight = dimensions.offsetHeight,\n    offsetTop = dimensions.offsetTop;\n  var elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\nexport var useGridScroll = function useGridScroll(apiRef, props) {\n  var logger = useGridLogger(apiRef, 'useGridScroll');\n  var colRef = apiRef.current.columnHeadersElementRef;\n  var windowRef = apiRef.current.windowRef;\n  var visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  var scrollToIndexes = React.useCallback(function (params) {\n    var totalRowCount = gridRowCountSelector(apiRef);\n    var visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    var scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(\"Scrolling to cell at row \".concat(params.rowIndex, \", col: \").concat(params.colIndex, \" \"));\n    var scrollCoordinates = {};\n    if (params.colIndex != null) {\n      var columnPositions = gridColumnPositionsSelector(apiRef);\n      var cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        var rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        var cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      var rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      var page = gridPageSelector(apiRef);\n      var pageSize = gridPageSizeSelector(apiRef);\n      var elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      var targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      var topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(\".\".concat(gridClasses['pinnedRows--top']))) == null ? void 0 : _querySelector.clientHeight) || 0;\n      var bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(\".\".concat(gridClasses['pinnedRows--bottom']))) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  var scroll = React.useCallback(function (params) {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(\"Scrolling left: \".concat(params.left));\n    }\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(\"Scrolling top: \".concat(params.top));\n    }\n    logger.debug(\"Scrolling, updating container, and viewport\");\n  }, [windowRef, colRef, logger]);\n  var getScrollPosition = React.useCallback(function () {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  var scrollApi = {\n    scroll: scroll,\n    scrollToIndexes: scrollToIndexes,\n    getScrollPosition: getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","map":{"version":3,"names":["React","useGridLogger","gridColumnPositionsSelector","gridVisibleColumnDefinitionsSelector","useGridSelector","gridPageSelector","gridPageSizeSelector","gridRowCountSelector","gridRowsMetaSelector","useGridApiMethod","gridVisibleSortedRowEntriesSelector","gridClasses","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","undefined","useGridScroll","apiRef","props","logger","colRef","current","columnHeadersElementRef","windowRef","visibleSortedRows","scrollToIndexes","useCallback","params","totalRowCount","visibleColumns","scrollToHeader","rowIndex","length","debug","colIndex","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","rowId","id","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","cellProps","width","computedWidth","left","clientWidth","scrollLeft","_querySelector","_querySelector2","rowsMeta","state","page","pageSize","elementIndex","pagination","targetOffsetHeight","positions","currentPageTotalHeight","topPinnedRowsHeight","querySelector","bottomPinnedRowsHeight","top","unstable_applyPipeProcessors","scroll","getScrollPosition","scrollApi"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,2BAA2B,EAAEC,oCAAoC,QAAQ,gCAAgC;AAClH,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,gBAAgB,EAAEC,oBAAoB,QAAQ,sCAAsC;AAC7F,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,mCAAmC,QAAQ,8BAA8B;AAClF,SAASC,WAAW,QAAQ,gCAAgC,CAAC,CAAC;AAC9D;;AAEA,SAASC,cAAc,CAACC,UAAU,EAAE;EAClC,IACEC,YAAY,GAIVD,UAAU,CAJZC,YAAY;IACZC,SAAS,GAGPF,UAAU,CAHZE,SAAS;IACTC,YAAY,GAEVH,UAAU,CAFZG,YAAY;IACZC,SAAS,GACPJ,UAAU,CADZI,SAAS;EAEX,IAAMC,aAAa,GAAGD,SAAS,GAAGD,YAAY,CAAC,CAAC;EAChD;;EAEA,IAAIA,YAAY,GAAGF,YAAY,EAAE;IAC/B,OAAOG,SAAS;EAClB;EAEA,IAAIC,aAAa,GAAGJ,YAAY,GAAGC,SAAS,EAAE;IAC5C,OAAOG,aAAa,GAAGJ,YAAY;EACrC;EAEA,IAAIG,SAAS,GAAGF,SAAS,EAAE;IACzB,OAAOE,SAAS;EAClB;EAEA,OAAOE,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,MAAM,EAAEC,KAAK,EAAK;EAC9C,IAAMC,MAAM,GAAGtB,aAAa,CAACoB,MAAM,EAAE,eAAe,CAAC;EACrD,IAAMG,MAAM,GAAGH,MAAM,CAACI,OAAO,CAACC,uBAAuB;EACrD,IAAMC,SAAS,GAAGN,MAAM,CAACI,OAAO,CAACE,SAAS;EAC1C,IAAMC,iBAAiB,GAAGxB,eAAe,CAACiB,MAAM,EAAEX,mCAAmC,CAAC;EACtF,IAAMmB,eAAe,GAAG7B,KAAK,CAAC8B,WAAW,CAAC,UAAAC,MAAM,EAAI;IAClD,IAAMC,aAAa,GAAGzB,oBAAoB,CAACc,MAAM,CAAC;IAClD,IAAMY,cAAc,GAAG9B,oCAAoC,CAACkB,MAAM,CAAC;IACnE,IAAMa,cAAc,GAAGH,MAAM,CAACI,QAAQ,IAAI,IAAI;IAE9C,IAAI,CAACD,cAAc,IAAIF,aAAa,KAAK,CAAC,IAAIC,cAAc,CAACG,MAAM,KAAK,CAAC,EAAE;MACzE,OAAO,KAAK;IACd;IAEAb,MAAM,CAACc,KAAK,oCAA6BN,MAAM,CAACI,QAAQ,oBAAUJ,MAAM,CAACO,QAAQ,OAAI;IACrF,IAAIC,iBAAiB,GAAG,CAAC,CAAC;IAE1B,IAAIR,MAAM,CAACO,QAAQ,IAAI,IAAI,EAAE;MAC3B,IAAME,eAAe,GAAGtC,2BAA2B,CAACmB,MAAM,CAAC;MAC3D,IAAIoB,SAAS;MAEb,IAAI,OAAOV,MAAM,CAACI,QAAQ,KAAK,WAAW,EAAE;QAC1C,IAAIO,qBAAqB;QAEzB,IAAMC,KAAK,GAAG,CAACD,qBAAqB,GAAGd,iBAAiB,CAACG,MAAM,CAACI,QAAQ,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGO,qBAAqB,CAACE,EAAE;QACtH,IAAMC,eAAe,GAAGxB,MAAM,CAACI,OAAO,CAACqB,2BAA2B,CAACH,KAAK,EAAEZ,MAAM,CAACO,QAAQ,CAAC;QAE1F,IAAIO,eAAe,IAAI,CAACA,eAAe,CAACE,gBAAgB,EAAE;UACxDN,SAAS,GAAGI,eAAe,CAACG,SAAS,CAACC,KAAK;QAC7C;MACF;MAEA,IAAI,OAAOR,SAAS,KAAK,WAAW,EAAE;QACpCA,SAAS,GAAGR,cAAc,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACY,aAAa;MAC3D;MAEAX,iBAAiB,CAACY,IAAI,GAAGvC,cAAc,CAAC;QACtCE,YAAY,EAAEa,SAAS,CAACF,OAAO,CAAC2B,WAAW;QAC3CrC,SAAS,EAAEY,SAAS,CAACF,OAAO,CAAC4B,UAAU;QACvCrC,YAAY,EAAEyB,SAAS;QACvBxB,SAAS,EAAEuB,eAAe,CAACT,MAAM,CAACO,QAAQ;MAC5C,CAAC,CAAC;IACJ;IAEA,IAAIP,MAAM,CAACI,QAAQ,IAAI,IAAI,EAAE;MAC3B,IAAImB,cAAc,EAAEC,eAAe;MAEnC,IAAMC,QAAQ,GAAGhD,oBAAoB,CAACa,MAAM,CAACI,OAAO,CAACgC,KAAK,CAAC;MAC3D,IAAMC,IAAI,GAAGrD,gBAAgB,CAACgB,MAAM,CAAC;MACrC,IAAMsC,QAAQ,GAAGrD,oBAAoB,CAACe,MAAM,CAAC;MAC7C,IAAMuC,YAAY,GAAG,CAACtC,KAAK,CAACuC,UAAU,GAAG9B,MAAM,CAACI,QAAQ,GAAGJ,MAAM,CAACI,QAAQ,GAAGuB,IAAI,GAAGC,QAAQ;MAC5F,IAAMG,kBAAkB,GAAGN,QAAQ,CAACO,SAAS,CAACH,YAAY,GAAG,CAAC,CAAC,GAAGJ,QAAQ,CAACO,SAAS,CAACH,YAAY,GAAG,CAAC,CAAC,GAAGJ,QAAQ,CAACO,SAAS,CAACH,YAAY,CAAC,GAAGJ,QAAQ,CAACQ,sBAAsB,GAAGR,QAAQ,CAACO,SAAS,CAACH,YAAY,CAAC;MAC9M,IAAMK,mBAAmB,GAAG,CAAC,CAACX,cAAc,GAAG3B,SAAS,CAACF,OAAO,CAACyC,aAAa,YAAKvD,WAAW,CAAC,iBAAiB,CAAC,EAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG2C,cAAc,CAACxC,YAAY,KAAK,CAAC;MAC1K,IAAMqD,sBAAsB,GAAG,CAAC,CAACZ,eAAe,GAAG5B,SAAS,CAACF,OAAO,CAACyC,aAAa,YAAKvD,WAAW,CAAC,oBAAoB,CAAC,EAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4C,eAAe,CAACzC,YAAY,KAAK,CAAC;MAClLyB,iBAAiB,CAAC6B,GAAG,GAAGxD,cAAc,CAAC;QACrCE,YAAY,EAAEa,SAAS,CAACF,OAAO,CAACX,YAAY,GAAGmD,mBAAmB,GAAGE,sBAAsB;QAC3FpD,SAAS,EAAEY,SAAS,CAACF,OAAO,CAACV,SAAS;QACtCC,YAAY,EAAE8C,kBAAkB;QAChC7C,SAAS,EAAEuC,QAAQ,CAACO,SAAS,CAACH,YAAY;MAC5C,CAAC,CAAC;IACJ;IAEArB,iBAAiB,GAAGlB,MAAM,CAACI,OAAO,CAAC4C,4BAA4B,CAAC,iBAAiB,EAAE9B,iBAAiB,EAAER,MAAM,CAAC;IAE7G,IAAI,OAAOQ,iBAAiB,CAACY,IAAI,KAAKhC,SAAS,IAAI,OAAOoB,iBAAiB,CAAC6B,GAAG,KAAKjD,SAAS,EAAE;MAC7FE,MAAM,CAACI,OAAO,CAAC6C,MAAM,CAAC/B,iBAAiB,CAAC;MACxC,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC,EAAE,CAAChB,MAAM,EAAEF,MAAM,EAAEM,SAAS,EAAEL,KAAK,CAACuC,UAAU,EAAEjC,iBAAiB,CAAC,CAAC;EACpE,IAAM0C,MAAM,GAAGtE,KAAK,CAAC8B,WAAW,CAAC,UAAAC,MAAM,EAAI;IACzC,IAAIJ,SAAS,CAACF,OAAO,IAAIM,MAAM,CAACoB,IAAI,IAAI,IAAI,IAAI3B,MAAM,CAACC,OAAO,EAAE;MAC9DD,MAAM,CAACC,OAAO,CAAC4B,UAAU,GAAGtB,MAAM,CAACoB,IAAI;MACvCxB,SAAS,CAACF,OAAO,CAAC4B,UAAU,GAAGtB,MAAM,CAACoB,IAAI;MAC1C5B,MAAM,CAACc,KAAK,2BAAoBN,MAAM,CAACoB,IAAI,EAAG;IAChD;IAEA,IAAIxB,SAAS,CAACF,OAAO,IAAIM,MAAM,CAACqC,GAAG,IAAI,IAAI,EAAE;MAC3CzC,SAAS,CAACF,OAAO,CAACV,SAAS,GAAGgB,MAAM,CAACqC,GAAG;MACxC7C,MAAM,CAACc,KAAK,0BAAmBN,MAAM,CAACqC,GAAG,EAAG;IAC9C;IAEA7C,MAAM,CAACc,KAAK,+CAA+C;EAC7D,CAAC,EAAE,CAACV,SAAS,EAAEH,MAAM,EAAED,MAAM,CAAC,CAAC;EAC/B,IAAMgD,iBAAiB,GAAGvE,KAAK,CAAC8B,WAAW,CAAC,YAAM;IAChD,IAAI,EAAEH,SAAS,IAAI,IAAI,IAAIA,SAAS,CAACF,OAAO,CAAC,EAAE;MAC7C,OAAO;QACL2C,GAAG,EAAE,CAAC;QACNjB,IAAI,EAAE;MACR,CAAC;IACH;IAEA,OAAO;MACLiB,GAAG,EAAEzC,SAAS,CAACF,OAAO,CAACV,SAAS;MAChCoC,IAAI,EAAExB,SAAS,CAACF,OAAO,CAAC4B;IAC1B,CAAC;EACH,CAAC,EAAE,CAAC1B,SAAS,CAAC,CAAC;EACf,IAAM6C,SAAS,GAAG;IAChBF,MAAM,EAANA,MAAM;IACNzC,eAAe,EAAfA,eAAe;IACf0C,iBAAiB,EAAjBA;EACF,CAAC;EACD9D,gBAAgB,CAACY,MAAM,EAAEmD,SAAS,EAAE,eAAe,CAAC;AACtD,CAAC"},"metadata":{},"sourceType":"module"}
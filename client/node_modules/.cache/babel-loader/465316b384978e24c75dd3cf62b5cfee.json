{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Whatshub_v1.2\\\\client\\\\src\\\\user\\\\pages\\\\bulk-msg\\\\components\\\\excel\\\\ExcelNum.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, Chip, Divider } from '@mui/material';\nimport { Stack } from '@mui/system';\nimport { Download, CloudUpload } from '@mui/icons-material';\nimport React from 'react';\nimport { SendBulkContext } from '../../../../../context/SendBulkContext';\nimport * as XLSX from 'xlsx/xlsx.mjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelNum = () => {\n  _s();\n  const sendBulk = React.useContext(SendBulkContext);\n  function handleChange(files) {\n    const file = files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      let data = new Uint8Array(e.target.result);\n      let workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      // find the name of your sheet in the workbook first\n      let worksheet = workbook.Sheets['Sheet1'];\n\n      // convert to json format\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n      sendBulk.setData({\n        ...sendBulk.data,\n        excel_array: jsonData\n      });\n      jsonData.find(i => typeof i.numbers !== 'number' ? [alert(\"Error found in numbers field\"), sendBulk.setData({\n        ...sendBulk.data,\n        excel_array: jsonData,\n        chip_color: 'error',\n        file: file\n      })] : sendBulk.setData({\n        ...sendBulk.data,\n        excel_array: jsonData,\n        chip_color: 'success',\n        file: file\n      }));\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      border: 0.5,\n      borderRadius: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: 'column',\n        alignItems: \"center\",\n        children: [sendBulk.data.file ? /*#__PURE__*/_jsxDEV(Chip, {\n          color: sendBulk.data.chip_color,\n          onDelete: () => {\n            sendBulk.setData({\n              ...sendBulk.data,\n              file: \"\",\n              excel_array: \"\"\n            });\n          },\n          label: sendBulk.data.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 44\n          }, this),\n          size: \"small\",\n          component: \"label\",\n          sx: {\n            textTransform: 'none'\n          },\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \".xlsx\",\n            type: \"file\",\n            hidden: true,\n            onChange: e => handleChange(e.target.files)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), \"Upload Excel  Sheet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            window.open('/whatsham-bulk-example.xlsx');\n          },\n          color: \"secondary\",\n          startIcon: /*#__PURE__*/_jsxDEV(Download, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this),\n          style: {\n            textTransform: 'none'\n          },\n          size: \"small\",\n          children: \"Download Excel Demo Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: 'column',\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: sendBulk.data.chip_color === 'success' && sendBulk.data.file ? false : true,\n        onClick: () => sendBulk.setData({\n          ...sendBulk.data,\n          step: 2\n        }),\n        variant: \"contained\",\n        size: \"small\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => sendBulk.setData({\n          ...sendBulk.data,\n          step: 0\n        }),\n        variant: \"outlined\",\n        size: \"small\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ExcelNum, \"kZTYD7f2DNrXASy7pBMvwdOXxlI=\");\n_c = ExcelNum;\nexport default ExcelNum;\nvar _c;\n$RefreshReg$(_c, \"ExcelNum\");","map":{"version":3,"names":["Box","Button","Chip","Divider","Stack","Download","CloudUpload","React","SendBulkContext","XLSX","ExcelNum","sendBulk","useContext","handleChange","files","file","reader","FileReader","onload","e","data","Uint8Array","target","result","workbook","read","type","worksheet","Sheets","jsonData","utils","sheet_to_json","setData","excel_array","find","i","numbers","alert","chip_color","readAsArrayBuffer","name","textTransform","window","open","step"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/user/pages/bulk-msg/components/excel/ExcelNum.js"],"sourcesContent":["import { Box, Button, Chip, Divider } from '@mui/material'\r\nimport { Stack } from '@mui/system'\r\nimport { Download, CloudUpload } from '@mui/icons-material'\r\nimport React from 'react'\r\nimport { SendBulkContext } from '../../../../../context/SendBulkContext'\r\nimport * as XLSX from 'xlsx/xlsx.mjs';\r\n\r\nconst ExcelNum = () => {\r\n    const sendBulk = React.useContext(SendBulkContext)\r\n\r\n    function handleChange(files) {\r\n        const file = files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n            let data = new Uint8Array(e.target.result);\r\n            let workbook = XLSX.read(data, { type: 'array' });\r\n            // find the name of your sheet in the workbook first\r\n            let worksheet = workbook.Sheets['Sheet1'];\r\n\r\n            // convert to json format\r\n            const jsonData = XLSX.utils.sheet_to_json(worksheet)\r\n            sendBulk.setData({ ...sendBulk.data, excel_array: jsonData })\r\n\r\n            jsonData.find(i => typeof i.numbers !== 'number' ?\r\n                [alert(\"Error found in numbers field\"), sendBulk.setData({ ...sendBulk.data, excel_array: jsonData, chip_color: 'error', file: file })] :\r\n                sendBulk.setData({ ...sendBulk.data, excel_array: jsonData, chip_color: 'success', file: file }))\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box p={5} border={0.5} borderRadius={2}>\r\n                <Stack spacing={2} direction={'column'} alignItems='center'>\r\n                    {\r\n                        sendBulk.data.file ? (\r\n                            <Chip\r\n                                color={sendBulk.data.chip_color}\r\n                                onDelete={() => {\r\n                                    sendBulk.setData({ ...sendBulk.data, file: \"\", excel_array: \"\" })\r\n                                }} label={sendBulk.data.file.name} />\r\n                        ) : (\r\n                            <Button\r\n                                startIcon={<CloudUpload />}\r\n                                size='small'\r\n                                component=\"label\"\r\n                                sx={{ textTransform: 'none' }}\r\n                                variant='outlined' >\r\n                                <input\r\n                                    accept=\".xlsx\"\r\n                                    type=\"file\"\r\n                                    hidden\r\n                                    onChange={(e) => handleChange(e.target.files)}\r\n                                />\r\n                                Upload Excel  Sheet\r\n                            </Button>\r\n                        )\r\n                    }\r\n\r\n                    <Button\r\n                        onClick={() => {\r\n                            window.open('/whatsham-bulk-example.xlsx')\r\n                        }}\r\n                        color='secondary'\r\n                        startIcon={<Download />}\r\n                        style={{ textTransform: 'none' }}\r\n                        size='small'>\r\n                        Download Excel Demo Sheet\r\n                    </Button>\r\n                </Stack>\r\n            </Box>\r\n\r\n            <Box mb={2} mt={2} >\r\n                <Divider />\r\n            </Box>\r\n\r\n            <Stack direction={'column'} spacing={2}>\r\n\r\n                <Button\r\n                    disabled={sendBulk.data.chip_color === 'success' && sendBulk.data.file ? false : true}\r\n                    onClick={() => sendBulk.setData({ ...sendBulk.data, step: 2 })}\r\n                    variant='contained'\r\n                    size='small'>Next</Button>\r\n\r\n                <Button\r\n                    onClick={() => sendBulk.setData({ ...sendBulk.data, step: 0 })}\r\n                    variant='outlined'\r\n                    size='small'>Back</Button>\r\n\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExcelNum"],"mappings":"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"},"metadata":{},"sourceType":"module"}
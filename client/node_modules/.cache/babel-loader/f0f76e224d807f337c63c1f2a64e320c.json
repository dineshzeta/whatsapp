{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Whatshub_v1.2\\\\client\\\\src\\\\user\\\\pages\\\\bulk-msg\\\\components\\\\excel\\\\WriteExlMsg.js\",\n  _s = $RefreshSig$();\nimport { Box, Chip, TextField, Typography } from '@mui/material';\nimport { Stack } from '@mui/system';\nimport React from 'react';\nimport { SendBulkContext } from '../../../../../context/SendBulkContext';\nimport AddMediaComp from '../AddMediaComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteExlMsg = () => {\n  _s();\n  const sendBulk = React.useContext(SendBulkContext);\n  function returnBoth() {\n    return sendBulk.data.excel_array.map(i => {\n      if (!i.var_one || !i.var_two) {\n        return \"no\";\n      } else {\n        return 'yes';\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [returnBoth().includes('no') && /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      mb: 2,\n      borderRadius: 2,\n      bgcolor: \"orange\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"black\",\n        variant: \"body2\",\n        children: \"It seems your excel does not have variables in all row it will be sending as null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: 'row',\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          onClick: () => sendBulk.setData({\n            ...sendBulk.data,\n            sending_msg: sendBulk.data.sending_msg + \"{var_one}\"\n          }),\n          label: \"{var_one}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          onClick: () => sendBulk.setData({\n            ...sendBulk.data,\n            sending_msg: sendBulk.data.sending_msg + \"{var_two}\"\n          }),\n          label: \"{var_two}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      multiline: true,\n      rows: 4,\n      value: sendBulk.data.sending_msg,\n      helperText: \"You can use your variable(s) as dynamic keyword\",\n      onChange: e => sendBulk.setData({\n        ...sendBulk.data,\n        sending_msg: e.target.value\n      }),\n      label: \"Write your message here\",\n      placeholder: \"hello {var_one} you booking number is {var_two}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddMediaComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(WriteExlMsg, \"kZTYD7f2DNrXASy7pBMvwdOXxlI=\");\n_c = WriteExlMsg;\nexport default WriteExlMsg;\nvar _c;\n$RefreshReg$(_c, \"WriteExlMsg\");","map":{"version":3,"names":["Box","Chip","TextField","Typography","Stack","React","SendBulkContext","AddMediaComp","WriteExlMsg","sendBulk","useContext","returnBoth","data","excel_array","map","i","var_one","var_two","includes","setData","sending_msg","e","target","value"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/user/pages/bulk-msg/components/excel/WriteExlMsg.js"],"sourcesContent":["import { Box, Chip, TextField, Typography } from '@mui/material'\r\nimport { Stack } from '@mui/system'\r\nimport React from 'react'\r\nimport { SendBulkContext } from '../../../../../context/SendBulkContext'\r\nimport AddMediaComp from '../AddMediaComp'\r\n\r\nconst WriteExlMsg = () => {\r\n    const sendBulk = React.useContext(SendBulkContext)\r\n\r\n    function returnBoth() {\r\n        return sendBulk.data.excel_array.map((i) => {\r\n            if (!i.var_one || !i.var_two) {\r\n                return \"no\"\r\n            } else {\r\n                return 'yes'\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                returnBoth().includes('no') &&\r\n                <Box p={2} mb={2} borderRadius={2} bgcolor='orange'>\r\n                    <Typography color='black' variant='body2' >It seems your excel does not have variables in all row it will be sending as null</Typography>\r\n                </Box>\r\n            }\r\n\r\n            <Box mb={2}>\r\n                <Stack spacing={2} direction={'row'}>\r\n                    <Chip onClick={() => sendBulk.setData({ ...sendBulk.data, sending_msg: sendBulk.data.sending_msg + \"{var_one}\" })} label=\"{var_one}\" />\r\n                    <Chip onClick={() => sendBulk.setData({ ...sendBulk.data, sending_msg: sendBulk.data.sending_msg + \"{var_two}\" })} label=\"{var_two}\" />\r\n                </Stack>\r\n            </Box>\r\n\r\n            <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                value={sendBulk.data.sending_msg}\r\n                helperText=\"You can use your variable(s) as dynamic keyword\"\r\n                onChange={(e) => sendBulk.setData({ ...sendBulk.data, sending_msg: e.target.value })}\r\n                label=\"Write your message here\" placeholder='hello {var_one} you booking number is {var_two}' />\r\n\r\n            <AddMediaComp />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WriteExlMsg"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAChE,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,wCAAwC;AACxE,OAAOC,YAAY,MAAM,iBAAiB;AAAA;AAE1C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,UAAU,CAACJ,eAAe,CAAC;EAElD,SAASK,UAAU,GAAG;IAClB,OAAOF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACC,GAAG,CAAEC,CAAC,IAAK;MACxC,IAAI,CAACA,CAAC,CAACC,OAAO,IAAI,CAACD,CAAC,CAACE,OAAO,EAAE;QAC1B,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC;EACN;EAEA,oBACI;IAAA,WAEQN,UAAU,EAAE,CAACO,QAAQ,CAAC,IAAI,CAAC,iBAC3B,QAAC,GAAG;MAAC,CAAC,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAC,YAAY,EAAE,CAAE;MAAC,OAAO,EAAC,QAAQ;MAAA,uBAC/C,QAAC,UAAU;QAAC,KAAK,EAAC,OAAO;QAAC,OAAO,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgG;MAAA;MAAA;MAAA;IAAA,QACvI,eAGV,QAAC,GAAG;MAAC,EAAE,EAAE,CAAE;MAAA,uBACP,QAAC,KAAK;QAAC,OAAO,EAAE,CAAE;QAAC,SAAS,EAAE,KAAM;QAAA,wBAChC,QAAC,IAAI;UAAC,OAAO,EAAE,MAAMT,QAAQ,CAACU,OAAO,CAAC;YAAE,GAAGV,QAAQ,CAACG,IAAI;YAAEQ,WAAW,EAAEX,QAAQ,CAACG,IAAI,CAACQ,WAAW,GAAG;UAAY,CAAC,CAAE;UAAC,KAAK,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eACvI,QAAC,IAAI;UAAC,OAAO,EAAE,MAAMX,QAAQ,CAACU,OAAO,CAAC;YAAE,GAAGV,QAAQ,CAACG,IAAI;YAAEQ,WAAW,EAAEX,QAAQ,CAACG,IAAI,CAACQ,WAAW,GAAG;UAAY,CAAC,CAAE;UAAC,KAAK,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACnI;MAAA;MAAA;MAAA;IAAA,QACN,eAEN,QAAC,SAAS;MACN,SAAS;MACT,SAAS;MACT,IAAI,EAAE,CAAE;MACR,KAAK,EAAEX,QAAQ,CAACG,IAAI,CAACQ,WAAY;MACjC,UAAU,EAAC,iDAAiD;MAC5D,QAAQ,EAAGC,CAAC,IAAKZ,QAAQ,CAACU,OAAO,CAAC;QAAE,GAAGV,QAAQ,CAACG,IAAI;QAAEQ,WAAW,EAAEC,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC,CAAE;MACrF,KAAK,EAAC,yBAAyB;MAAC,WAAW,EAAC;IAAiD;MAAA;MAAA;MAAA;IAAA,QAAG,eAEpG,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEd;AAEd,CAAC;AAAA,GA1CKf,WAAW;AAAA,KAAXA,WAAW;AA4CjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
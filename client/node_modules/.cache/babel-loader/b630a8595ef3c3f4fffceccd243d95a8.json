{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{Switch}from'react-router-dom';import{ThemeProvider,createTheme}from'@mui/material/styles';import PublicRoute from'./routing/PublicRoute';import AdminRoute from'./routing/AdminRoute';import LoginAdmin from'./admin/LoginAdmin';import AdminDashboard from'./admin/AdminDashboard';import LoginUser from'./user/LoginUser';import UserRoute from'./routing/UserRoute';import UserDashboard from'./user/UserDashboard';import{GlobalProvider}from'./context/GlobalContext';import DonePage from'./user/pages/DonePage';import GetWebSet from'./utils/GetWebSet';import RecoveryUser from'./recovery/RecoverUser';import RecoveryAdmin from'./recovery/RecoverAdmin';import InstallApp from'./installation/InstallApp';import DocScreen from'./documentation/DocScreen';import Error404 from'./Error404';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ColorModeContext=/*#__PURE__*/React.createContext({toggleColorMode:function toggleColorMode(){}});export default function ToggleColorMode(){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),splash=_React$useState2[0],setSplash=_React$useState2[1];React.useEffect(function(){setMode(localStorage.getItem('theme')?localStorage.getItem('theme'):(localStorage.setItem('theme','dark'),\"dark\"));setTimeout(function(){setSplash(false);},1000);},[]);var _React$useState3=React.useState('dark'),_React$useState4=_slicedToArray(_React$useState3,2),mode=_React$useState4[0],setMode=_React$useState4[1];var colorMode=React.useMemo(function(){return{toggleColorMode:function toggleColorMode(){setMode(function(prevMode){return prevMode==='light'?'dark':'light';});}};},[]);var theme=React.useMemo(function(){return createTheme({palette:{mode:mode}});},[mode]);return/*#__PURE__*/_jsx(ColorModeContext.Provider,{value:colorMode,children:/*#__PURE__*/_jsx(GlobalProvider,{children:/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(AdminRoute,{exact:true,path:\"/admin\",component:AdminDashboard}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/admin/login\",component:LoginAdmin}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/user/login\",component:LoginUser}),/*#__PURE__*/_jsx(UserRoute,{exact:true,path:\"/user\",component:UserDashboard}),/*#__PURE__*/_jsx(UserRoute,{exact:true,path:\"/done-page\",component:DonePage}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/recovery-user/:id\",component:RecoveryUser}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/recovery-admin/:id\",component:RecoveryAdmin}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/install\",component:InstallApp}),/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/doc\",component:DocScreen}),/*#__PURE__*/_jsx(PublicRoute,{path:\"*\",exact:true,component:Error404})]})})})});}","map":{"version":3,"names":["React","Switch","ThemeProvider","createTheme","PublicRoute","AdminRoute","LoginAdmin","AdminDashboard","LoginUser","UserRoute","UserDashboard","GlobalProvider","DonePage","GetWebSet","RecoveryUser","RecoveryAdmin","InstallApp","DocScreen","Error404","ColorModeContext","createContext","toggleColorMode","ToggleColorMode","useState","splash","setSplash","useEffect","setMode","localStorage","getItem","setItem","setTimeout","mode","colorMode","useMemo","prevMode","theme","palette"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport PublicRoute from './routing/PublicRoute'\r\nimport AdminRoute from './routing/AdminRoute'\r\nimport LoginAdmin from './admin/LoginAdmin'\r\nimport AdminDashboard from './admin/AdminDashboard'\r\nimport LoginUser from './user/LoginUser';\r\nimport UserRoute from './routing/UserRoute'\r\nimport UserDashboard from './user/UserDashboard';\r\nimport { GlobalProvider } from './context/GlobalContext';\r\nimport DonePage from './user/pages/DonePage';\r\nimport GetWebSet from './utils/GetWebSet';\r\nimport RecoveryUser from './recovery/RecoverUser';\r\nimport RecoveryAdmin from './recovery/RecoverAdmin';\r\nimport InstallApp from './installation/InstallApp';\r\nimport DocScreen from './documentation/DocScreen';\r\nimport Error404 from './Error404';\r\n\r\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\r\n\r\n\r\nexport default function ToggleColorMode() {\r\n  const [splash, setSplash] = React.useState(true)\r\n\r\n  React.useEffect(() => {\r\n    setMode(localStorage.getItem('theme') ? (localStorage.getItem('theme')) : (localStorage.setItem('theme', 'dark'), \"dark\"))\r\n    setTimeout(() => {\r\n      setSplash(false)\r\n    }, 1000);\r\n  }, [])\r\n\r\n  const [mode, setMode] = React.useState('dark');\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode\r\n        },\r\n      }),\r\n    [mode],\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <GlobalProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <Switch>\r\n            <AdminRoute exact path=\"/admin\" component={AdminDashboard} />\r\n            <PublicRoute exact path=\"/admin/login\" component={LoginAdmin} />\r\n            <PublicRoute exact path=\"/user/login\" component={LoginUser} />\r\n            <UserRoute exact path=\"/user\" component={UserDashboard} />\r\n            <UserRoute exact path=\"/done-page\" component={DonePage} />\r\n            <PublicRoute exact path=\"/recovery-user/:id\" component={RecoveryUser} />\r\n            <PublicRoute exact path=\"/recovery-admin/:id\" component={RecoveryAdmin} />\r\n            <PublicRoute exact path=\"/install\" component={InstallApp} />\r\n            <PublicRoute exact path=\"/doc\" component={DocScreen} />\r\n            <PublicRoute path='*' exact={true} component={Error404} />\r\n          </Switch>\r\n        </ThemeProvider>\r\n      </GlobalProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Whatshub_v1.2\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport PublicRoute from './routing/PublicRoute';\nimport AdminRoute from './routing/AdminRoute';\nimport LoginAdmin from './admin/LoginAdmin';\nimport AdminDashboard from './admin/AdminDashboard';\nimport LoginUser from './user/LoginUser';\nimport UserRoute from './routing/UserRoute';\nimport UserDashboard from './user/UserDashboard';\nimport { GlobalProvider } from './context/GlobalContext';\nimport DonePage from './user/pages/DonePage';\nimport GetWebSet from './utils/GetWebSet';\nimport RecoveryUser from './recovery/RecoverUser';\nimport RecoveryAdmin from './recovery/RecoverAdmin';\nimport InstallApp from './installation/InstallApp';\nimport DocScreen from './documentation/DocScreen';\nimport Error404 from './Error404';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nexport default function ToggleColorMode() {\n  _s();\n  const [splash, setSplash] = React.useState(true);\n  React.useEffect(() => {\n    setMode(localStorage.getItem('theme') ? localStorage.getItem('theme') : (localStorage.setItem('theme', 'dark'), \"dark\"));\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []);\n  const [mode, setMode] = React.useState('dark');\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(GlobalProvider, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(AdminRoute, {\n            exact: true,\n            path: \"/admin\",\n            component: AdminDashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/admin/login\",\n            component: LoginAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/user/login\",\n            component: LoginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n            exact: true,\n            path: \"/user\",\n            component: UserDashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n            exact: true,\n            path: \"/done-page\",\n            component: DonePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/recovery-user/:id\",\n            component: RecoveryUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/recovery-admin/:id\",\n            component: RecoveryAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/install\",\n            component: InstallApp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            exact: true,\n            path: \"/doc\",\n            component: DocScreen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n            path: \"*\",\n            exact: true,\n            component: Error404\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleColorMode, \"W/rCrXbxEnM/ZxK3TdYLfRPSO90=\");\n_c = ToggleColorMode;\nvar _c;\n$RefreshReg$(_c, \"ToggleColorMode\");","map":{"version":3,"names":["React","Switch","ThemeProvider","createTheme","PublicRoute","AdminRoute","LoginAdmin","AdminDashboard","LoginUser","UserRoute","UserDashboard","GlobalProvider","DonePage","GetWebSet","RecoveryUser","RecoveryAdmin","InstallApp","DocScreen","Error404","ColorModeContext","createContext","toggleColorMode","ToggleColorMode","splash","setSplash","useState","useEffect","setMode","localStorage","getItem","setItem","setTimeout","mode","colorMode","useMemo","prevMode","theme","palette"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport PublicRoute from './routing/PublicRoute'\r\nimport AdminRoute from './routing/AdminRoute'\r\nimport LoginAdmin from './admin/LoginAdmin'\r\nimport AdminDashboard from './admin/AdminDashboard'\r\nimport LoginUser from './user/LoginUser';\r\nimport UserRoute from './routing/UserRoute'\r\nimport UserDashboard from './user/UserDashboard';\r\nimport { GlobalProvider } from './context/GlobalContext';\r\nimport DonePage from './user/pages/DonePage';\r\nimport GetWebSet from './utils/GetWebSet';\r\nimport RecoveryUser from './recovery/RecoverUser';\r\nimport RecoveryAdmin from './recovery/RecoverAdmin';\r\nimport InstallApp from './installation/InstallApp';\r\nimport DocScreen from './documentation/DocScreen';\r\nimport Error404 from './Error404';\r\n\r\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\r\n\r\n\r\nexport default function ToggleColorMode() {\r\n  const [splash, setSplash] = React.useState(true)\r\n\r\n  React.useEffect(() => {\r\n    setMode(localStorage.getItem('theme') ? (localStorage.getItem('theme')) : (localStorage.setItem('theme', 'dark'), \"dark\"))\r\n    setTimeout(() => {\r\n      setSplash(false)\r\n    }, 1000);\r\n  }, [])\r\n\r\n  const [mode, setMode] = React.useState('dark');\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode\r\n        },\r\n      }),\r\n    [mode],\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <GlobalProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <Switch>\r\n            <AdminRoute exact path=\"/admin\" component={AdminDashboard} />\r\n            <PublicRoute exact path=\"/admin/login\" component={LoginAdmin} />\r\n            <PublicRoute exact path=\"/user/login\" component={LoginUser} />\r\n            <UserRoute exact path=\"/user\" component={UserDashboard} />\r\n            <UserRoute exact path=\"/done-page\" component={DonePage} />\r\n            <PublicRoute exact path=\"/recovery-user/:id\" component={RecoveryUser} />\r\n            <PublicRoute exact path=\"/recovery-admin/:id\" component={RecoveryAdmin} />\r\n            <PublicRoute exact path=\"/install\" component={InstallApp} />\r\n            <PublicRoute exact path=\"/doc\" component={DocScreen} />\r\n            <PublicRoute path='*' exact={true} component={Error404} />\r\n          </Switch>\r\n        </ThemeProvider>\r\n      </GlobalProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
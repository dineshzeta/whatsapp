{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Whatshub_v1.2\\\\client\\\\src\\\\user\\\\pages\\\\check-logs\\\\CheckLogs.js\",\n  _s = $RefreshSig$();\nimport { Box, Grid, Typography, LinearProgress, IconButton } from '@mui/material';\nimport React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      width: '100%',\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: 'space-between',\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = CustomToolbar;\nconst CheckLogs = () => {\n  _s();\n  const [report, setLogs] = React.useState(\"\");\n  const token = localStorage.getItem(process.env.REACT_APP_TOKEN + \"_user\");\n  async function fetchData() {\n    const res = await axios.get(`${process.env.REACT_APP_BASE_URL}/api/instance/get_logs`, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    setLogs(res.data.data);\n  }\n  React.useEffect(() => {\n    if (!token) return;\n    fetchData();\n  }, [token]);\n  function delLog(e) {\n    if (window.confirm('Are your sure ?')) {\n      axios.post(`${process.env.REACT_APP_BASE_URL}/api/instance/del_log`, {\n        id: e\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => {\n        alert(res.data.msg);\n        fetchData();\n      }).catch(er => console.log(er));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      fontWeight: 'bold',\n      variant: \"h6\",\n      children: \"Report Single Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: report ? /*#__PURE__*/_jsxDEV(Box, {\n        height: \"80vh\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          getRowId: row => row.id,\n          rows: [...report].reverse(),\n          columns: [{\n            headerName: \"ID\",\n            field: 'id',\n            flex: 1\n          }, {\n            headerName: \"Device\",\n            field: 'sender',\n            flex: 1\n          }, {\n            headerName: \"Receiver\",\n            field: 'receiver',\n            flex: 1\n          }, {\n            headerName: \"Status\",\n            field: 'status',\n            flex: 1\n          }, {\n            headerName: \"Delete\",\n            field: 'del',\n            flex: 1,\n            renderCell: data => {\n              return /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => delLog(data.row.id),\n                color: \"error\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 49\n              }, this);\n            }\n          }],\n          pageSize: 50,\n          rowsPerPageOptions: [50],\n          checkboxSelection: false,\n          components: {\n            Toolbar: CustomToolbar\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckLogs, \"JGRS4n8+1oPG4x8JwhP5A1CkeYI=\");\n_c2 = CheckLogs;\nexport default CheckLogs;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"CheckLogs\");","map":{"version":3,"names":["Box","Grid","Typography","LinearProgress","IconButton","React","DataGrid","GridToolbarContainer","GridToolbarExport","Delete","axios","CustomToolbar","CheckLogs","report","setLogs","useState","token","localStorage","getItem","process","env","REACT_APP_TOKEN","fetchData","res","get","REACT_APP_BASE_URL","headers","Authorization","data","useEffect","delLog","e","window","confirm","post","id","then","alert","msg","catch","er","console","log","row","reverse","headerName","field","flex","renderCell","Toolbar"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/user/pages/check-logs/CheckLogs.js"],"sourcesContent":["import { Box, Grid, Typography, LinearProgress, IconButton } from '@mui/material'\r\nimport React from 'react'\r\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\r\nimport { Delete } from '@mui/icons-material';\r\nimport axios from 'axios'\r\n\r\nfunction CustomToolbar() {\r\n    return (\r\n        <GridToolbarContainer>\r\n            <Box p={2} width={'100%'}  >\r\n                <Grid container justifyContent={'space-between'} spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant='h5' >All Users</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <GridToolbarExport />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </GridToolbarContainer>\r\n    );\r\n}\r\n\r\nconst CheckLogs = () => {\r\n    const [report, setLogs] = React.useState(\"\")\r\n    const token = localStorage.getItem(process.env.REACT_APP_TOKEN + \"_user\")\r\n\r\n    async function fetchData() {\r\n        const res = await axios.get(`${process.env.REACT_APP_BASE_URL}/api/instance/get_logs`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token\r\n            }\r\n        })\r\n        setLogs(res.data.data)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!token) return\r\n        fetchData()\r\n    }, [token])\r\n\r\n    function delLog(e) {\r\n        if (window.confirm('Are your sure ?')) {\r\n            axios.post(`${process.env.REACT_APP_BASE_URL}/api/instance/del_log`, {\r\n                id: e\r\n            }, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token\r\n                }\r\n            }).then((res) => {\r\n                alert(res.data.msg)\r\n                fetchData()\r\n            }).catch((er) => console.log(er))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box p={2}>\r\n            <Typography fontWeight={'bold'} variant='h6' >Report Single Message</Typography>\r\n            <Box mt={4}>\r\n                {\r\n                    report ? (\r\n                        <Box height='80vh'>\r\n                            <DataGrid\r\n                                getRowId={(row) => row.id}\r\n                                rows={[...report].reverse()}\r\n                                columns={[\r\n                                    { headerName: \"ID\", field: 'id', flex: 1, },\r\n                                    { headerName: \"Device\", field: 'sender', flex: 1, },\r\n                                    { headerName: \"Receiver\", field: 'receiver', flex: 1, },\r\n                                    { headerName: \"Status\", field: 'status', flex: 1, },\r\n                                    {\r\n                                        headerName: \"Delete\", field: 'del', flex: 1, renderCell: data => {\r\n                                            return (\r\n                                                <IconButton onClick={() => delLog(data.row.id)} color='error' >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                ]}\r\n                                pageSize={50}\r\n                                rowsPerPageOptions={[50]}\r\n                                checkboxSelection={false}\r\n                                components={{\r\n                                    Toolbar: CustomToolbar,\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    ) : <LinearProgress />\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CheckLogs"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,cAAc,EAAEC,UAAU,QAAQ,eAAe;AACjF,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAQ,kBAAkB;AACpF,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,SAASC,aAAa,GAAG;EACrB,oBACI,QAAC,oBAAoB;IAAA,uBACjB,QAAC,GAAG;MAAC,CAAC,EAAE,CAAE;MAAC,KAAK,EAAE,MAAO;MAAA,uBACrB,QAAC,IAAI;QAAC,SAAS;QAAC,cAAc,EAAE,eAAgB;QAAC,OAAO,EAAE,CAAE;QAAA,wBACxD,QAAC,IAAI;UAAC,IAAI;UAAA,uBACN,QAAC,UAAU;YAAC,OAAO,EAAC,IAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAwB;UAAA;UAAA;UAAA;QAAA,QAC7C,eACP,QAAC,IAAI;UAAC,IAAI;UAAA,uBACN,QAAC,iBAAiB;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAClB;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACa;AAE/B;AAAC,KAfQA,aAAa;AAiBtB,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,eAAe,GAAG,OAAO,CAAC;EAEzE,eAAeC,SAAS,GAAG;IACvB,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEL,OAAO,CAACC,GAAG,CAACK,kBAAmB,wBAAuB,EAAE;MACnFC,OAAO,EAAE;QACLC,aAAa,EAAE,SAAS,GAAGX;MAC/B;IACJ,CAAC,CAAC;IACFF,OAAO,CAACS,GAAG,CAACK,IAAI,CAACA,IAAI,CAAC;EAC1B;EAEAvB,KAAK,CAACwB,SAAS,CAAC,MAAM;IAClB,IAAI,CAACb,KAAK,EAAE;IACZM,SAAS,EAAE;EACf,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,SAASc,MAAM,CAACC,CAAC,EAAE;IACf,IAAIC,MAAM,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAE;MACnCvB,KAAK,CAACwB,IAAI,CAAE,GAAEf,OAAO,CAACC,GAAG,CAACK,kBAAmB,uBAAsB,EAAE;QACjEU,EAAE,EAAEJ;MACR,CAAC,EAAE;QACCL,OAAO,EAAE;UACLC,aAAa,EAAE,SAAS,GAAGX;QAC/B;MACJ,CAAC,CAAC,CAACoB,IAAI,CAAEb,GAAG,IAAK;QACbc,KAAK,CAACd,GAAG,CAACK,IAAI,CAACU,GAAG,CAAC;QACnBhB,SAAS,EAAE;MACf,CAAC,CAAC,CAACiB,KAAK,CAAEC,EAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC,CAAC;IACrC;EACJ;EAEA,oBACI,QAAC,GAAG;IAAC,CAAC,EAAE,CAAE;IAAA,wBACN,QAAC,UAAU;MAAC,UAAU,EAAE,MAAO;MAAC,OAAO,EAAC,IAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoC,eAChF,QAAC,GAAG;MAAC,EAAE,EAAE,CAAE;MAAA,UAEH3B,MAAM,gBACF,QAAC,GAAG;QAAC,MAAM,EAAC,MAAM;QAAA,uBACd,QAAC,QAAQ;UACL,QAAQ,EAAG8B,GAAG,IAAKA,GAAG,CAACR,EAAG;UAC1B,IAAI,EAAE,CAAC,GAAGtB,MAAM,CAAC,CAAC+B,OAAO,EAAG;UAC5B,OAAO,EAAE,CACL;YAAEC,UAAU,EAAE,IAAI;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE;UAAG,CAAC,EAC3C;YAAEF,UAAU,EAAE,QAAQ;YAAEC,KAAK,EAAE,QAAQ;YAAEC,IAAI,EAAE;UAAG,CAAC,EACnD;YAAEF,UAAU,EAAE,UAAU;YAAEC,KAAK,EAAE,UAAU;YAAEC,IAAI,EAAE;UAAG,CAAC,EACvD;YAAEF,UAAU,EAAE,QAAQ;YAAEC,KAAK,EAAE,QAAQ;YAAEC,IAAI,EAAE;UAAG,CAAC,EACnD;YACIF,UAAU,EAAE,QAAQ;YAAEC,KAAK,EAAE,KAAK;YAAEC,IAAI,EAAE,CAAC;YAAEC,UAAU,EAAEpB,IAAI,IAAI;cAC7D,oBACI,QAAC,UAAU;gBAAC,OAAO,EAAE,MAAME,MAAM,CAACF,IAAI,CAACe,GAAG,CAACR,EAAE,CAAE;gBAAC,KAAK,EAAC,OAAO;gBAAA,uBACzD,QAAC,MAAM;kBAAA;kBAAA;kBAAA;gBAAA;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QACD;YAErB;UACJ,CAAC,CACH;UACF,QAAQ,EAAE,EAAG;UACb,kBAAkB,EAAE,CAAC,EAAE,CAAE;UACzB,iBAAiB,EAAE,KAAM;UACzB,UAAU,EAAE;YACRc,OAAO,EAAEtC;UACb;QAAE;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA,QACA,gBACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAExB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAvEKC,SAAS;AAAA,MAATA,SAAS;AAyEf,eAAeA,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
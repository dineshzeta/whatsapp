{"ast":null,"code":"import _objectSpread from\"C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Box,Stack,Typography,Slider,Switch}from'@mui/material';import{DesktopDatePicker,LocalizationProvider,TimePicker}from'@mui/x-date-pickers';import{AdapterDateFns}from'@mui/x-date-pickers/AdapterDateFns';import moment from'moment';import{SendBulkContext}from'../../../../context/SendBulkContext';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var DelayMsg=function DelayMsg(){var sendBulk=React.useContext(SendBulkContext);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"gray\",children:[\"Time delay in each message: \",sendBulk.data.delay_in_sec,\" sec.\"]}),/*#__PURE__*/_jsx(Box,{p:1,children:/*#__PURE__*/_jsx(Slider,{onChange:function onChange(e,val){return sendBulk.setData(_objectSpread(_objectSpread({},sendBulk.data),{},{delay_in_sec:parseInt(val)}));},defaultValue:sendBulk.data.delay_in_sec,valueLabelDisplay:\"auto\",step:1,marks:true,min:3,max:50})})]});};export default DelayMsg;","map":{"version":3,"names":["React","Box","Stack","Typography","Slider","Switch","DesktopDatePicker","LocalizationProvider","TimePicker","AdapterDateFns","moment","SendBulkContext","DelayMsg","sendBulk","useContext","data","delay_in_sec","e","val","setData","parseInt"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/src/user/pages/bulk-msg/components/DelayMsg.js"],"sourcesContent":["import React from 'react'\r\nimport { Box, Stack, Typography, Slider, Switch } from '@mui/material'\r\nimport { DesktopDatePicker, LocalizationProvider, TimePicker } from '@mui/x-date-pickers'\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport moment from 'moment'\r\nimport { SendBulkContext } from '../../../../context/SendBulkContext';\r\n\r\nconst DelayMsg = () => {\r\n    const sendBulk = React.useContext(SendBulkContext)\r\n    return (\r\n        <div>\r\n\r\n            <Typography variant='body2' color='gray' >\r\n                Time delay in each message: {sendBulk.data.delay_in_sec} sec.\r\n            </Typography>\r\n            <Box p={1} >\r\n                <Slider\r\n                    onChange={(e, val) => sendBulk.setData({ ...sendBulk.data, delay_in_sec: parseInt(val) })}\r\n                    defaultValue={sendBulk.data.delay_in_sec}\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks\r\n                    min={3}\r\n                    max={50}\r\n                />\r\n            </Box>\r\n\r\n\r\n            {/* <Box borderRadius={2} bgcolor={'#222222'} p={1}>\r\n                <Stack direction={'row'} alignItems='center' justifyContent=\"space-between\">\r\n                    <Typography color='gray' variant='body2'>Schedule this campaign</Typography>\r\n                    <Switch checked={sendBulk.data.schedule} onChange={(e) => sendBulk.setData({ ...sendBulk.data, schedule: e.target.checked })} />\r\n                </Stack>\r\n\r\n                {\r\n                    sendBulk.data.schedule &&\r\n                    <Box mt={1}>\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <Stack direction={'column'} spacing={2}>\r\n                                <Typography color={'orange'} variant='caption' >your campaign will be start on {sendBulk.data.time.format(\"DD-MMMM-YYYY HH:mm A\")}</Typography>\r\n\r\n                                <Box p={2} borderRadius={2} bgcolor={'black'} >\r\n                                    <Typography variant='caption'>Hours Later</Typography>\r\n                                    <Slider\r\n                                        onChange={(e, val) => sendBulk.setData({ ...sendBulk.data, time: moment().add(val, 'hours') })}\r\n                                        marks\r\n                                        valueLabelDisplay=\"auto\"\r\n                                        step={1}\r\n                                        min={0}\r\n                                        max={24}\r\n                                    />\r\n                                </Box>\r\n                                <Box p={2} borderRadius={2} bgcolor={'black'} >\r\n                                    <Typography variant='caption'>Minutes Later</Typography>\r\n                                    <Slider\r\n                                        onChange={(e, val) => sendBulk.setData({ ...sendBulk.data, time: moment().add(val, 'minutes') })}\r\n                                        marks\r\n                                        valueLabelDisplay=\"auto\"\r\n                                        step={1}\r\n                                        min={10}\r\n                                        max={59}\r\n                                    />\r\n                                </Box>\r\n                            </Stack>\r\n                        </LocalizationProvider>\r\n                    </Box>\r\n\r\n                }\r\n            </Box> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DelayMsg"],"mappings":"wIAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAAEC,MAAM,KAAQ,eAAe,CACtE,OAASC,iBAAiB,CAAEC,oBAAoB,CAAEC,UAAU,KAAQ,qBAAqB,CACzF,OAASC,cAAc,KAAQ,oCAAoC,CACnE,MAAOC,OAAM,KAAM,QAAQ,CAC3B,OAASC,eAAe,KAAQ,qCAAqC,CAAC,wFAEtE,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACnB,GAAMC,SAAQ,CAAGb,KAAK,CAACc,UAAU,CAACH,eAAe,CAAC,CAClD,mBACI,oCAEI,MAAC,UAAU,EAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,0CACPE,QAAQ,CAACE,IAAI,CAACC,YAAY,WAC9C,cACb,KAAC,GAAG,EAAC,CAAC,CAAE,CAAE,uBACN,KAAC,MAAM,EACH,QAAQ,CAAE,kBAACC,CAAC,CAAEC,GAAG,QAAKL,SAAQ,CAACM,OAAO,gCAAMN,QAAQ,CAACE,IAAI,MAAEC,YAAY,CAAEI,QAAQ,CAACF,GAAG,CAAC,GAAG,EAAC,CAC1F,YAAY,CAAEL,QAAQ,CAACE,IAAI,CAACC,YAAa,CACzC,iBAAiB,CAAC,MAAM,CACxB,IAAI,CAAE,CAAE,CACR,KAAK,MACL,GAAG,CAAE,CAAE,CACP,GAAG,CAAE,EAAG,EACV,EACA,GA4CJ,CAEd,CAAC,CAED,cAAeJ,SAAQ"},"metadata":{},"sourceType":"module"}
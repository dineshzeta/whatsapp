{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar HideGridColMenuItem = function HideGridColMenuItem(props) {\n  var column = props.column,\n    onClick = props.onClick;\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var timeoutRef = React.useRef();\n  var visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  var columnsWithMenu = visibleColumns.filter(function (col) {\n    return col.disableColumnMenu !== true;\n  }); // do not allow to hide the last column with menu\n\n  var disabled = columnsWithMenu.length === 1;\n  var toggleColumn = React.useCallback(function (event) {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(function () {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (column.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","useGridApiContext","useGridRootProps","gridVisibleColumnDefinitionsSelector","jsx","_jsx","HideGridColMenuItem","props","column","onClick","apiRef","rootProps","timeoutRef","useRef","visibleColumns","columnsWithMenu","filter","col","disableColumnMenu","disabled","length","toggleColumn","useCallback","event","current","setTimeout","setColumnVisibility","field","useEffect","clearTimeout","disableColumnSelector","hideable","children","getLocaleText","process","env","NODE_ENV","propTypes","object","isRequired","func"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,oCAAoC,QAAQ,iCAAiC;AACtF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAGC,KAAK,EAAI;EACnC,IACEC,MAAM,GAEJD,KAAK,CAFPC,MAAM;IACNC,OAAO,GACLF,KAAK,CADPE,OAAO;EAET,IAAMC,MAAM,GAAGT,iBAAiB,EAAE;EAClC,IAAMU,SAAS,GAAGT,gBAAgB,EAAE;EACpC,IAAMU,UAAU,GAAGd,KAAK,CAACe,MAAM,EAAE;EACjC,IAAMC,cAAc,GAAGX,oCAAoC,CAACO,MAAM,CAAC;EACnE,IAAMK,eAAe,GAAGD,cAAc,CAACE,MAAM,CAAC,UAAAC,GAAG;IAAA,OAAIA,GAAG,CAACC,iBAAiB,KAAK,IAAI;EAAA,EAAC,CAAC,CAAC;;EAEtF,IAAMC,QAAQ,GAAGJ,eAAe,CAACK,MAAM,KAAK,CAAC;EAC7C,IAAMC,YAAY,GAAGvB,KAAK,CAACwB,WAAW,CAAC,UAAAC,KAAK,EAAI;IAC9C;AACJ;AACA;AACA;AACA;IACI,IAAIJ,QAAQ,EAAE;MACZ;IACF;IAEAV,OAAO,CAACc,KAAK,CAAC,CAAC,CAAC;;IAEhBX,UAAU,CAACY,OAAO,GAAGC,UAAU,CAAC,YAAM;MACpCf,MAAM,CAACc,OAAO,CAACE,mBAAmB,CAAClB,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,KAAK,EAAE,KAAK,CAAC;IACnF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACjB,MAAM,EAAEF,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,KAAK,EAAElB,OAAO,EAAEU,QAAQ,CAAC,CAAC;EACvErB,KAAK,CAAC8B,SAAS,CAAC,YAAM;IACpB,OAAO;MAAA,OAAMC,YAAY,CAACjB,UAAU,CAACY,OAAO,CAAC;IAAA;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIb,SAAS,CAACmB,qBAAqB,EAAE;IACnC,OAAO,IAAI;EACb;EAEA,IAAItB,MAAM,CAACuB,QAAQ,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,OAAO,aAAa1B,IAAI,CAACL,QAAQ,EAAE;IACjCS,OAAO,EAAEY,YAAY;IACrBF,QAAQ,EAAEA,QAAQ;IAClBa,QAAQ,EAAEtB,MAAM,CAACc,OAAO,CAACS,aAAa,CAAC,sBAAsB;EAC/D,CAAC,CAAC;AACJ,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG9B,mBAAmB,CAAC+B,SAAS,GAAG;EACtE;EACA;EACA;EACA;EACA7B,MAAM,EAAET,SAAS,CAACuC,MAAM,CAACC,UAAU;EACnC9B,OAAO,EAAEV,SAAS,CAACyC,IAAI,CAACD;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV,SAASjC,mBAAmB"},"metadata":{},"sourceType":"module"}
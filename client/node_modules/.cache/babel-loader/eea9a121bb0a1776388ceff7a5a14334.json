{"ast":null,"code":"import _slicedToArray from \"C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport var useGridNativeEventListener = function useGridNativeEventListener(apiRef, ref, eventName, handler, options) {\n  var logger = useGridLogger(apiRef, 'useNativeEventListener');\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    added = _React$useState2[0],\n    setAdded = _React$useState2[1];\n  var handlerRef = React.useRef(handler);\n  var wrapHandler = React.useCallback(function (event) {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(function () {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(function () {\n    var targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(\"Binding native \".concat(eventName, \" event\"));\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      var boundElem = targetElement;\n      setAdded(true);\n      var unsubscribe = function unsubscribe() {\n        logger.debug(\"Clearing native \".concat(eventName, \" event\"));\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","map":{"version":3,"names":["React","isFunction","useGridLogger","useGridNativeEventListener","apiRef","ref","eventName","handler","options","logger","useState","added","setAdded","handlerRef","useRef","wrapHandler","useCallback","event","current","useEffect","targetElement","debug","addEventListener","boundElem","unsubscribe","removeEventListener","subscribeEvent"],"sources":["C:/Users/Administrator/Desktop/Whatshub_v1.2/client/node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0B,CAAIC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEC,OAAO,EAAK;EACtF,IAAMC,MAAM,GAAGP,aAAa,CAACE,MAAM,EAAE,wBAAwB,CAAC;EAC9D,sBAA0BJ,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCC,KAAK;IAAEC,QAAQ;EACtB,IAAMC,UAAU,GAAGb,KAAK,CAACc,MAAM,CAACP,OAAO,CAAC;EACxC,IAAMQ,WAAW,GAAGf,KAAK,CAACgB,WAAW,CAAC,UAAAC,KAAK,EAAI;IAC7C,OAAOJ,UAAU,CAACK,OAAO,IAAIL,UAAU,CAACK,OAAO,CAACD,KAAK,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EACNjB,KAAK,CAACmB,SAAS,CAAC,YAAM;IACpBN,UAAU,CAACK,OAAO,GAAGX,OAAO;EAC9B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACbP,KAAK,CAACmB,SAAS,CAAC,YAAM;IACpB,IAAIC,aAAa;IAEjB,IAAInB,UAAU,CAACI,GAAG,CAAC,EAAE;MACnBe,aAAa,GAAGf,GAAG,EAAE;IACvB,CAAC,MAAM;MACLe,aAAa,GAAGf,GAAG,IAAIA,GAAG,CAACa,OAAO,GAAGb,GAAG,CAACa,OAAO,GAAG,IAAI;IACzD;IAEA,IAAIE,aAAa,IAAId,SAAS,IAAI,CAACK,KAAK,EAAE;MACxCF,MAAM,CAACY,KAAK,0BAAmBf,SAAS,YAAS;MACjDc,aAAa,CAACE,gBAAgB,CAAChB,SAAS,EAAES,WAAW,EAAEP,OAAO,CAAC;MAC/D,IAAMe,SAAS,GAAGH,aAAa;MAC/BR,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAMY,WAAW,GAAG,SAAdA,WAAW,GAAS;QACxBf,MAAM,CAACY,KAAK,2BAAoBf,SAAS,YAAS;QAClDiB,SAAS,CAACE,mBAAmB,CAACnB,SAAS,EAAES,WAAW,EAAEP,OAAO,CAAC;MAChE,CAAC;MAEDJ,MAAM,CAACc,OAAO,CAACQ,cAAc,CAAC,SAAS,EAAEF,WAAW,CAAC;IACvD;EACF,CAAC,EAAE,CAACnB,GAAG,EAAEU,WAAW,EAAET,SAAS,EAAEK,KAAK,EAAEF,MAAM,EAAED,OAAO,EAAEJ,MAAM,CAAC,CAAC;AACnE,CAAC"},"metadata":{},"sourceType":"module"}